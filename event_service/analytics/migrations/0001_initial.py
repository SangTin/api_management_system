# Generated by Django 4.2.21 on 2025-06-05 04:43

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlertRules',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('alert_type', models.CharField(choices=[('threshold', 'Threshold Alert'), ('anomaly', 'Anomaly Detection'), ('trend', 'Trend Alert')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('metric_name', models.CharField(max_length=100)),
                ('threshold_value', models.FloatField()),
                ('comparison_operator', models.CharField(max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('cooldown_minutes', models.IntegerField(default=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'alert_rules',
                'ordering': ['severity', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SystemHealthMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_service_status', models.BooleanField(default=True)),
                ('vendor_service_status', models.BooleanField(default=True)),
                ('event_service_status', models.BooleanField(default=True)),
                ('avg_api_response_time', models.FloatField(default=0.0)),
                ('error_rate', models.FloatField(default=0.0)),
                ('cpu_usage', models.FloatField(blank=True, null=True)),
                ('memory_usage', models.FloatField(blank=True, null=True)),
                ('db_connections', models.IntegerField(blank=True, null=True)),
                ('db_query_time', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'system_health_metrics',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='VendorPerformanceAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vendor_id', models.CharField(max_length=100)),
                ('vendor_name', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('total_api_calls', models.IntegerField(default=0)),
                ('successful_api_calls', models.IntegerField(default=0)),
                ('failed_api_calls', models.IntegerField(default=0)),
                ('avg_response_time', models.FloatField(default=0.0)),
                ('uptime_percentage', models.FloatField(default=100.0)),
                ('success_rate', models.FloatField(default=100.0)),
                ('unique_users', models.IntegerField(default=0)),
                ('total_devices', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vendor_performance_analytics',
                'ordering': ['-date', 'vendor_name'],
                'unique_together': {('vendor_id', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserActivityAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('hour', models.IntegerField()),
                ('login_count', models.IntegerField(default=0)),
                ('api_usage_count', models.IntegerField(default=0)),
                ('command_execution_count', models.IntegerField(default=0)),
                ('unique_active_users', models.IntegerField(default=0)),
                ('avg_session_duration', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user_activity_analytics',
                'ordering': ['-date', '-hour'],
                'unique_together': {('date', 'hour')},
            },
        ),
        migrations.CreateModel(
            name='DashboardMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('daily', 'Daily Metrics'), ('weekly', 'Weekly Metrics'), ('monthly', 'Monthly Metrics'), ('real_time', 'Real Time Metrics')], max_length=20)),
                ('date', models.DateField()),
                ('total_users', models.IntegerField(default=0)),
                ('active_users', models.IntegerField(default=0)),
                ('new_users', models.IntegerField(default=0)),
                ('user_logins', models.IntegerField(default=0)),
                ('total_vendors', models.IntegerField(default=0)),
                ('active_vendors', models.IntegerField(default=0)),
                ('new_vendors', models.IntegerField(default=0)),
                ('total_api_configs', models.IntegerField(default=0)),
                ('api_tests_executed', models.IntegerField(default=0)),
                ('api_tests_successful', models.IntegerField(default=0)),
                ('commands_executed', models.IntegerField(default=0)),
                ('commands_successful', models.IntegerField(default=0)),
                ('commands_failed', models.IntegerField(default=0)),
                ('avg_response_time', models.FloatField(default=0.0)),
                ('system_errors', models.IntegerField(default=0)),
                ('system_warnings', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'dashboard_metrics',
                'ordering': ['-date'],
                'unique_together': {('metric_type', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AlertInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('triggered_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved')], default='active', max_length=20)),
                ('triggered_value', models.FloatField()),
                ('threshold_value', models.FloatField()),
                ('message', models.TextField()),
                ('acknowledged_by', models.CharField(blank=True, max_length=100)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('alert_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.alertrules')),
            ],
            options={
                'db_table': 'alert_instances',
                'ordering': ['-triggered_at'],
            },
        ),
    ]
